# Template for a VirtualHost with SSL
# Note: to use the template, rename it to /etc/apache2/vhost.d/yourvhost.conf.
# Files must have the .conf suffix to be loaded.
#
# See /usr/share/doc/packages/apache2/README.QUICKSTART for further hints
# about virtual hosts.

# NameVirtualHost statements should be added to /etc/apache2/listen.conf.

#
# This is the Apache server configuration file providing SSL support.
# It contains the configuration directives to instruct the server how to
# serve pages over an https connection. For detailing information about these 
# directives see http://httpd.apache.org/docs/2.4/mod/mod_ssl.html
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.  
#

<IfModule mod_ssl.c>

#    NameVirtualHost *:80

    <VirtualHost *:80>
        ServerName localhost:80
        Redirect permanent / https://localhost:___DOCKER_SSL_PORT___/
    </VirtualHost>
    
    <VirtualHost *:443>        
            #  General setup for the virtual host
            DocumentRoot "/var/www/html"
            ServerName ___HOSTNAME___:443
            #ServerAdmin webmaster@example.com
            
            #   SSL Engine Switch:
            #   Enable/Disable SSL for this virtual host.
            SSLEngine on

            #   You can use per vhost certificates if SNI is supported.
            SSLCertificateFile /etc/apache2/ssl.crt/___HOSTNAME_CERTFILE___
            SSLCertificateKeyFile /etc/apache2/ssl.key/___HOSTNAME_KEYFILE___

            #SSLCACertificatePath /etc/apache2/ssl.crt
            SSLCACertificateFile /etc/apache2/ssl.crt/ca.crt            
            SSLCertificateChainFile /etc/apache2/ssl.crt/ca-chain.crt
            
            SSLCompression Off
            
            SSLCipherSuite ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4
            
            SSLHonorCipherOrder on

            #   Per-Server Logging:
            #   The home of a custom SSL log file. Use this when you want a
            #   compact non-error SSL logfile on a virtual host basis.
            #CustomLog /var/log/apache2/ssl_request_log   ssl_combined
            #ErrorLog /var/log/apache2/error_log
            #TransferLog /var/log/apache2/access_log
            LogLevel info ssl:debug
            
            SSLVerifyClient optional_no_ca
            SSLVerifyDepth 2
            
            SSLProtocol all -SSLv2 -SSLv3
            
            #   SSL Engine Options:
                #   Set various options for the SSL engine.
                #   o FakeBasicAuth:
                #        Translate the client X.509 into a Basic Authorisation.  This means that
                #        the standard Auth/DBMAuth methods can be used for access control.  The
                #        user name is the `one line' version of the client's X.509 certificate.
                #        Note that no password is obtained from the user. Every entry in the user
                #        file needs this password: `xxj31ZMTZzkVA'.
                #   o ExportCertData:
                #        This exports two additional environment variables: SSL_CLIENT_CERT and
                #        SSL_SERVER_CERT. These contain the PEM-encoded certificates of the
                #        server (always existing) and the client (only existing when client
                #        authentication is used). This can be used to import the certificates
                #        into CGI scripts.
                #   o StdEnvVars:
                #        This exports the standard SSL/TLS related `SSL_*' environment variables.
                #        Per default this exportation is switched off for performance reasons,
                #        because the extraction step is an expensive operation and is usually
                #        useless for serving static content. So one usually enables the
                #        exportation for CGI and SSI requests only.
                #   o OptRenegotiate:
                #        This enables optimized SSL connection renegotiation handling when SSL
                #        directives are used in per-directory context.
            SSLOptions +StdEnvVars +ExportCertData
            BrowserMatch "MSIE [2-6]" \
                            nokeepalive ssl-unclean-shutdown \
                            downgrade-1.0 force-response-1.0
            # MSIE 7 and newer should be able to use keepalive
            BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown
            
    </VirtualHost>
</IfModule>

